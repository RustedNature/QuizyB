@page "/quiz/{section}"
@using QuizyB.Services
@inject QuizService QuizService

<div class="quiz-container">
    @if (QuizService.CurrentQuestion != null)
    {
        <h3>Punktzahl: @_points</h3>
        <h3>@QuizService.CurrentQuestion.QuestionText</h3>
        <h4>Antwort</h4>
        @if (QuizService.CurrentQuestion.Answers != null)
        {
            for (var i = 0; i < QuizService.CurrentQuestion.Answers.Count; i++)
            {
                var answerIndex = i;
                <button class="answer-button @QuizService.GetButtonTheme(answerIndex)"
                        @onclick="() => QuizService.CheckAnswer(answerIndex, ref _points)" disabled="@QuizService.IsAnswered">
                    @QuizService.CurrentQuestion.Answers[answerIndex]
                </button>
            }
        }

        @switch (QuizService.IsAnswered)
        {
            case true when QuizService.IsCorrect:
                <h4>@QuizService.CurrentQuestion.Answers![QuizService.CurrentQuestion.CorrectAnswerIndex] ist die richtige Antwort</h4>
                <button class="next-button" @onclick="QuizService.NextQuestion"> Nächste Frage</button>
                break;
            case true when !QuizService.IsCorrect:
                <h4>@QuizService.CurrentQuestion.Answers![QuizService.CurrentQuestion.CorrectAnswerIndex] wäre die richtige Antwort gewesen</h4>
                <button class="next-button" @onclick="QuizService.NextQuestion"> Nächste Frage</button>
                break;
        }
    }
    else if (Is404)
    {
        <h1>Es gibt, zumindest noch nicht, kein Quiz für das Thema: "@Section" </h1>
    }
    else
    {
        <p>Loading...</p>
    }

</div>

@code {
    [Parameter] public string? Section { get; set; }
    private bool Is404 { get; set; }
    private int _points;


    protected override async Task OnParametersSetAsync()
    {
        _points = 0;
        Is404 = false;
        QuizService.Reset();
        switch (Section.ToLower())
        {
            case "computerspiele":
                await QuizService.LoadQuestions("data/games.json");
                break;
            case "wunder_der_technik":
                await QuizService.LoadQuestions("data/technic.json");
                break;
            default:
                Is404 = true;
                break;
        }

        await base.OnInitializedAsync();
    }

}